{"version":3,"sources":["hooks/useResizeObserver.js","components/MapLegend.js","components/MapVisualizer.js"],"names":["useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","observer","forEach","entry","index","contentRect","observe","unobserve","MapLegend","data","mapViz","mapScale","statistic","t","useTranslation","svgRef","useRef","wrapperRef","svg","select","getBoundingClientRect","width","height","MAP_VIZS","BUBBLES","transition","duration","D3_TRANSITION_DURATION","attr","selectAll","remove","text","domainMax","domain","join","d","yScale","copy","range","call","axisRight","tickSize","tickPadding","tickValues","tickFormat","num","formatNumber","style","g","color","title","marginTop","marginRight","marginBottom","marginLeft","ticks","ordinalWeights","x","tickAdjust","interpolate","n","Math","min","length","rangeRound","quantize","ramp","toDataURL","interpolator","Object","assign","interpolateRound","undefined","round","map","i","quantile","format","invertExtent","thresholds","quantiles","thresholdFormat","scaleLinear","append","widthScale","reduce","a","b","xPos","w","slice","acc","scaleOrdinal","enter","scaleBand","max","bandwidth","axisBottom","on","node","legend","capitalize","CHOROPLETH","Number","isInteger","className","MAP_LEGEND_HEIGHT","id","preserveAspectRatio","position","canvas","context","getContext","fillStyle","fillRect","CODE_2","getTotalStatistic","getStatistic","MapVisualizer","mapCode","mapView","regionHighlighted","changeMap","setRegionHighlighted","isCountryLoaded","mapMeta","MAP_META","history","useHistory","geoData","useSWR","geoDataFile","file","json","suspense","revalidateOnFocus","statisticMax","useMemo","stateCodes","keys","filter","stateCode","statisticTotal","scaleSqrt","clamp","nice","scaleSequential","interpolateReds","interpolateBlues","interpolateGreens","interpolateGreys","interpolatePurples","interpolateOranges","colorInterpolator","path","topology","topojson","objects","geoPath","geoTransverseMercator","reflectY","reflectX","fitSize","fillColor","useCallback","CITY_CODES","TOPO2CITY_NAME","properties","stateData","Array","from","document","getElementsByClassName","el","opacity","strokeColor","alpha","STATISTIC_CONFIGS","features","MAP_VIEWS","COUNTRY","NZL_adm2","mapType","MAP_TYPES","feature","district","state","obj","populateTexts","regionSelection","districtData","districts","toTitleCase","onceTouchedRegion","districtName","T","update","exit","event","stopPropagation","STATE","sel","bind","window","requestIdleCallback","circlesData","value","DISTRICTS","sort","featureA","featureB","centroid","meshStates","meshDistricts","stateName","CITY_NAMES","each","highlighted","this","parentNode","appendChild","Fragment","viewBox","UNKNOWN_DISTRICT_KEY","classnames","colorInterpolationFilters","type","values"],"mappings":"6KAGaA,EAAoB,SAACC,GAAS,IAAD,EACJC,mBAAS,MADL,mBACjCC,EADiC,KACrBC,EADqB,KAcxC,OAZAC,qBAAU,WACR,IAAMC,EAAgBL,EAAIM,QACpBC,EAAiB,IAAIC,KAAe,SAACC,EAASC,GAClDD,EAAQE,SAAQ,SAACC,EAAOC,GACtBV,EAAcS,EAAME,mBAIxB,OADAP,EAAeQ,QAAQV,GAChB,WACLE,EAAeS,UAAUX,MAE1B,CAACL,IACGE,I,mOCuHMe,MAvHf,YAAwD,EAApCC,KAAqC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,UACnCC,EAAKC,cAALD,EAEDE,EAASC,iBAAO,MAChBC,EAAaD,mBACbvB,EAAaH,YAAkB2B,GAoFrC,OAlFAtB,qBAAU,WACR,IAAMuB,EAAMC,YAAOJ,EAAOlB,SADZ,EAGZJ,GAAcwB,EAAWpB,QAAQuB,wBAD9BC,EAFS,EAETA,MAAOC,EAFE,EAEFA,OAGZ,IAAKD,IAAUC,EAAf,OACqBL,EAAWpB,QAAQuB,wBAApCC,EADJ,EACIA,MAAOC,EADX,EACWA,OAEX,GAAKD,GAAUC,EAEf,GAAIZ,IAAWa,IAASC,QAAS,CAC/B,IAAMX,EAAIK,EAAIO,aAAaC,SAASC,KACpCT,EACGC,OAAO,SACPM,WAAWZ,GACXe,KAAK,UAAW,GAChBA,KAAK,aAAc,MAEtBV,EACGC,OAAO,SACPU,UAAU,QACVJ,WAAWZ,GACXe,KAAK,UAAW,GAChBE,SACHZ,EAAIW,UAAU,4BAA4BC,SAC1CZ,EAAIC,OAAO,aAAaY,KAAK,IAE7B,IAAMC,EAAYrB,EAASsB,SAAS,GAErBf,EACZC,OAAO,YACPS,KAAK,YAFO,oBAGZA,KAAK,cAAe,UAGpBC,UAAU,UACVpB,KAAK,CAACuB,EAAY,GAAiB,EAAZA,EAAiB,EAAGA,IAC3CE,KAAK,UACLN,KAAK,OAAQ,QACbA,KAAK,SAAU,QACfH,WAAWZ,GACXe,KAAK,MAAM,SAACO,GAAD,OAAQxB,EAASwB,MAC5BP,KAAK,IAAKjB,GAEb,IAAMyB,EAASzB,EAAS0B,OAAOC,MAAM,CAAC,GAAI,EAAI3B,EAASqB,KAEvDd,EACGC,OAAO,eACPS,KAAK,YAFR,oBAGGH,WAAWZ,GACX0B,KACCC,YAAUJ,GACPK,SAAS,GACTC,YAAY,GACZC,WAAW,CAACX,EAAY,GAAiB,EAAZA,EAAiB,EAAGA,IACjDY,YAAW,SAACC,GAAD,OAASC,YAAaD,EAAK,aAE1ChB,UAAU,cACVkB,MAAM,cAAe,UAExB7B,EAAIC,OAAO,eAAeoB,MAAK,SAACS,GAAD,OAAOA,EAAE7B,OAAO,WAAWW,iBAE1DZ,EAAIqB,MAAK,kBAoDf,WAeS,IAAD,yDAAJ,GAdFrB,EAcM,EAdNA,IACA+B,EAaM,EAbNA,MACAC,EAYM,EAZNA,MAYM,IAXNT,gBAWM,MAXK,EAWL,MAVNpB,aAUM,MAVE,IAUF,MATNC,cASM,MATG,GAAKmB,EASR,MARNU,iBAQM,MARM,GAQN,MAPNC,mBAOM,MAPQ,EAOR,MANNC,oBAMM,MANS,GAAKZ,EAMd,MALNa,kBAKM,MALO,EAKP,MAJNC,aAIM,MAJElC,EAAQ,GAIV,EAHNuB,EAGM,EAHNA,WACAD,EAEM,EAFNA,WACAa,EACM,EADNA,eAEAtC,EAAIW,UAAU,gBAAgBC,SAC9BZ,EAAIW,UAAU,mBAAmBC,SACjC,IAOI2B,EAPE5C,EAAIK,EAAIO,aAAaC,SAASC,KAEhC+B,EAAa,SAACV,GACFA,EAAEnB,UAAU,cACpBD,KAAK,KAAMuB,EAAYE,EAAe/B,IAM9C,GAAI2B,EAAMU,YAAa,CACrB,IAAMC,EAAIC,KAAKC,IAAIb,EAAMhB,SAAS8B,OAAQd,EAAMX,QAAQyB,QAExDN,EAAIR,EACDZ,OACA2B,WAAWC,YAASN,YAAYL,EAAYjC,EAAQ+B,GAAcQ,IAErE1C,EACGC,OAAO,SACPS,KAAK,QAAS,QACdA,KAAK,IAAK0B,GACV1B,KAAK,IAAKuB,GACVvB,KAAK,QAASP,EAAQiC,EAAaF,GACnCxB,KAAK,SAAUN,EAAS6B,EAAYE,GACpCzB,KAAK,sBAAuB,QAC5BA,KACC,aACAsC,EAAKjB,EAAMZ,OAAOJ,OAAOgC,YAASN,YAAY,EAAG,GAAIC,KAAKO,kBAK3D,GAAIlB,EAAMmB,cAgCb,GA/BAlD,EACGC,OAAO,SACPU,UAAU,QACVJ,WAAWZ,GACXe,KAAK,UAAW,GAChBE,SAEH2B,EAAIY,OAAOC,OACTrB,EACGZ,OACA+B,aAAaG,YAAiBjB,EAAYjC,EAAQ+B,IACrD,CACEd,MADF,WAEI,MAAO,CAACgB,EAAYjC,EAAQ+B,MAKlClC,EACGC,OAAO,SACPS,KAAK,QAAS,QACdA,KAAK,IAAK0B,GACV1B,KAAK,IAAKuB,GACVvB,KAAK,QAASP,EAAQiC,EAAaF,GACnCxB,KAAK,SAAUN,EAAS6B,EAAYE,GACpCzB,KAAK,sBAAuB,QAC5BA,KAAK,aAAcsC,EAAKjB,EAAMmB,gBAAgBD,aAC9C1C,WAAWZ,GACXe,KAAK,UAAW,IAGd6B,EAAEF,MAAO,CACZ,QAAmBiB,IAAf7B,EAA0B,CAC5B,IAAMiB,EAAIC,KAAKY,MAAMlB,EAAQ,GAC7BZ,EAAaL,YAAMsB,GAAGc,KAAI,SAACC,GAAD,OAAOC,YAAS3B,EAAMhB,SAAU0C,GAAKf,EAAI,OAE3C,oBAAfhB,IACTA,EAAaiC,iBAAsBL,IAAf5B,EAA2B,KAAOA,UAMvD,GAAIK,EAAM6B,aAAc,CAC3B,IAAMC,EAAa9B,EAAM8B,WACrB9B,EAAM8B,aACN9B,EAAM+B,UACN/B,EAAM+B,YACN/B,EAAMhB,SAEJgD,OACWT,IAAf5B,EACI,SAACT,GAAD,OAAOA,GACe,kBAAfS,EACPiC,YAAOjC,GACPA,EAENa,EAAIyB,cACDjD,OAAO,EAAE,EAAGgB,EAAMX,QAAQyB,OAAS,IACnCC,WAAW,CAACV,EAAYjC,EAAQ+B,IAEnClC,EACGiE,OAAO,KACPtD,UAAU,QACVpB,KAAKwC,EAAMX,SACXJ,KAAK,QACLN,KAAK,KAAK,SAACO,EAAGwC,GAAJ,OAAUlB,EAAEkB,EAAI,MAC1B/C,KAAK,IAAKuB,GACVvB,KAAK,SAAS,SAACO,EAAGwC,GAAJ,OAAUlB,EAAEkB,GAAKlB,EAAEkB,EAAI,MACrC/C,KAAK,SAAUN,EAAS6B,EAAYE,GACpCzB,KAAK,QAAQ,SAACO,GAAD,OAAOA,KAEvBQ,EAAaL,aAAO,EAAGyC,EAAWhB,QAClCnB,EAAa,SAAC+B,GACZ,OAAW,IAAPA,EAAiBM,EAAgB,GAC5BN,IAAMI,EAAWhB,OAAS,EAC1BY,IAAMI,EAAWhB,OAAS,EAC1BkB,EAAgBF,EAAWJ,GAAK,IAAKA,GACvCM,EAAgBF,EAAWJ,GAAIA,QAHjC,OAQJ,CAMH,GALAzD,EACGC,OAAO,SACPM,WAAWZ,GACXe,KAAK,UAAW,GAChBA,KAAK,aAAc,MACjB4B,EAaE,CACL,IAAM4B,EAAaF,cAChBjD,OAAO,CAAC,EAAGuB,EAAe6B,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,OAC/CvB,WAAW,CAAC,EAAG3C,EAAQiC,EAAaF,IAEjCoC,EAAOhC,EAAekB,KAAI,SAACe,EAAGd,GAAJ,OAC9BnB,EACGkC,MAAM,EAAGf,GACTU,QAAO,SAACM,EAAKF,GAAN,OAAYE,EAAMP,EAAWK,KAAInC,MAG7CG,EAAImC,cAAe3D,OAAOgB,EAAMhB,UAAUK,MAAMkD,GAEhDtE,EACGC,OAAO,SACPU,UAAU,QACVpB,KAAKwC,EAAMhB,UACXC,MAAK,SAAC2D,GAAD,OACJA,EACGV,OAAO,QACPvD,KAAK,IAAK6B,GACV7B,KAAK,SAAS,SAACO,EAAGwC,GAAJ,OAAUS,EAAW5B,EAAemB,UAEtD/C,KAAK,IAAKuB,GACVvB,KAAK,SAAUN,EAAS6B,EAAYE,GACpCzB,KAAK,OAAQqB,GACbxB,WAAWZ,GACXe,KAAK,IAAK6B,GACV7B,KAAK,SAAS,SAACO,EAAGwC,GAAJ,OAAUS,EAAW5B,EAAemB,OAClD/C,KAAK,UAAW,QAzCnB6B,EAAIqC,cACD7D,OAAOgB,EAAMhB,UACb+B,WAAW,CAACV,EAAYjC,EAAQ+B,IACnClC,EACGW,UAAU,QACVpB,KAAKwC,EAAMhB,UACXC,KAAK,QACLN,KAAK,IAAK6B,GACV7B,KAAK,IAAKuB,GACVvB,KAAK,QAASiC,KAAKkC,IAAI,EAAGtC,EAAEuC,YAAc,IAC1CpE,KAAK,SAAUN,EAAS6B,EAAYE,GACpCzB,KAAK,OAAQqB,GAiClBS,EAAa,aA8Bf,OA3BAxC,EACGC,OAAO,SACPS,KAAK,YAFR,sBAEoCN,EAAS+B,EAF7C,MAGG5B,WAAWZ,GACXe,KAAK,QAAS,QACdW,KACC0D,YAAWxC,GACRF,MAAMA,EAA6B,kBAAfX,EAA0BA,OAAa4B,GAC3D5B,WAAiC,oBAAfA,EAA4BA,OAAa4B,GAC3D/B,SAASA,GACTE,WAAWA,IAEfuD,GAAG,SAAS,WACXhF,EAAIqB,KAAKmB,GAAYnB,MAAK,SAACrB,GAAD,OAASA,EAAIC,OAAO,WAAWW,eAE1DS,MAAK,SAACS,GAAD,OACJA,EACG7B,OAAO,aACPS,KAAK,QAAS,YACdA,KAAK,IAAK0B,GACV1B,KAAK,IAAKuB,EAAYE,EAAe/B,EAAS,GAC9CM,KAAK,OAAQ,gBACbA,KAAK,cAAe,SACpBA,KAAK,cAAe,QACpBG,KAAKmB,MAGLhC,EAAIiF,OA1QLC,CAAO,CACLlF,IAAKA,EACL+B,MAAOtC,EACPuC,MAAM,GAAD,OAAKrC,EAAEwF,YAAWzF,IAAlB,YAAiCC,EAAE,UACxCQ,MAAOA,EACPC,OAAQA,EACRiC,MAAO,EACPX,WAAY,SAAUT,EAAGwC,EAAGf,GAC1B,GAAIlD,IAAWa,IAAS+E,YAAeC,OAAOC,UAAUrE,GACxD,OAAIwC,IAAMf,EAAEG,OAAS,EAAUjB,YAAaX,GAAK,IAC1CW,YAAaX,IAEtBmB,WAAY,EACZF,YAAa,SAIlB,CAACvC,EAAGpB,EAAYkB,EAAUD,EAAQE,IAGnC,yBACE6F,UAAU,uBACV1D,MAAO,CACLzB,OAAQoF,IAKRvD,UAAW,QAEb5D,IAAK0B,GAEL,yBAAK0F,GAAG,SAASC,oBAAoB,gBAAgBrH,IAAKwB,GACxD,2BAAO0F,UAAU,SACjB,uBAAGA,UAAU,SACb,uBAAGA,UAAU,YACb,uBAAGA,UAAU,eACb,uBAAGA,UAAU,QACX,0BAAMA,UAAU,eAGpB,4BACEA,UAAU,cACV1D,MAAO,CAAC8D,SAAU,WAAYvF,OAAQ,OAkO9C,SAAS4C,EAAKjB,GAMZ,IAN6B,IAAVW,EAAS,uDAAL,IAEjBkD,EAAS3F,YAAO,gBAAgBgF,OAChCY,GAAYD,EAAOzF,MAAQuC,EAAKkD,EAAOxF,OAAS,EAAIwF,GAAQE,WAChE,MAEOrC,EAAI,EAAGA,EAAIf,IAAKe,EACvBoC,EAAQE,UAAYhE,EAAM0B,GAAKf,EAAI,IACnCmD,EAAQG,SAASvC,EAAG,EAAG,EAAG,GAE5B,OAAOmC,E,0KC9THK,EAAS,aAqBTC,EAAoB,SAAC3G,EAAMG,GAC/B,OAAOyG,YAAa5G,EAAM,QAASG,IAwjBtB0G,UArjBf,YAUI,IAAD,WATDC,EASC,EATDA,QACAC,EAQC,EARDA,QACA9G,EAOC,EAPDA,OACAD,EAMC,EANDA,KAEAgH,GAIC,EALDC,UAKC,EAJDD,mBACAE,EAGC,EAHDA,qBACA/G,EAEC,EAFDA,UAIMG,GAFL,EADD6G,gBAEY9G,cAALD,EACQG,iBAAO,OAEhB6G,EAAUC,IAASP,GACnBQ,EAAUC,cAEHC,EAAWC,YACtBL,EAAQM,YADoB,uCAE5B,WAAOC,GAAP,SAAA9C,EAAA,sEACe+C,YAAKD,GADpB,mFAF4B,sDAK5B,CAACE,UAAU,EAAOC,mBAAmB,IALhC9H,KAQD+H,EAAeC,mBAAQ,WAC3B,IAAMC,EAAarE,OAAOsE,KAAKlI,GAAMmI,QACnC,SAACC,GAAD,MACgB,OAAdA,KAEJ,OAAO9C,YAAI2C,GAAY,SAACG,GAAD,OAAezB,EAAkB3G,EAAKoI,GAAYjI,QAaxE,CAACH,EAAM+G,EAAS5G,IAEbkI,EAAiBL,mBAAQ,WAC7B,OAAOrB,EAAkB3G,EAAK8G,GAAU3G,KACvC,CAACH,EAAM8G,EAAS3G,IAEbD,EAAW8H,mBAAQ,WACvB,OAAI/H,IAAWa,IAASC,QACfuH,YAAU,CAAC,EAAGlF,KAAKkC,IAAIyC,EAAc,IAAK,CAAC,EAAG,KAClDQ,OAAM,GACNC,KAAK,GAEDC,YACL,CAAC,EAAGrF,KAAKkC,IAAI,EAAGyC,IA7EE,SAAC5H,GACzB,OAAQA,GACN,IAAK,YACH,OAAO,SAACC,GAAD,OAAOsI,YAAoB,IAAJtI,IAChC,IAAK,SACH,OAAO,SAACA,GAAD,OAAOuI,YAAqB,IAAJvI,IACjC,IAAK,YACH,OAAO,SAACA,GAAD,OAAOwI,YAAsB,IAAJxI,IAClC,IAAK,WACH,OAAO,SAACA,GAAD,OAAOyI,YAAqB,IAAJzI,IACjC,IAAK,SACH,OAAO,SAACA,GAAD,OAAO0I,YAAuB,IAAJ1I,IACnC,QACE,OAAO,SAACA,GAAD,OAAO2I,YAAuB,IAAJ3I,KAiE/B4I,CAAkB7I,IAClBoI,OAAM,KAET,CAACtI,EAAQE,EAAW4H,IAGjBkB,EAAOjB,mBAAQ,WACnB,IAAKR,EAAS,OAAO,KAGrB,IAAM0B,EAAWC,IACf3B,EAEAA,EAAQ4B,QAAR,UAcF,OAAOC,YACLC,cACCC,UAAS,GACTC,UAAS,GACTC,QAAQ,CApHU,IAAK,KAoHEP,MAK3B,CAAC1B,IAWEkC,EAAYC,uBAEhB,SAACjI,GAEC,IAAIA,EAAG,MAAO,sBACd,IAEIyB,EAFEiF,EAAYwB,IAAWC,IAAenI,EAAEoI,WAAWpD,KACnDqD,EAAY/J,EAAKoI,GAuBvB,OArBInI,IAAWa,IAAS+E,YAGtB1C,EAAIwD,EAAkBoD,EAAW5J,GACjCgD,EAAIjD,EAASiD,GAEb6G,MAAMC,KAAKC,SAASC,uBAAuB,WAAW1K,SACpD,SAAA2K,GAAE,OAAIA,EAAG9H,MAAM+H,QAAU,MAGrBpK,IAAWa,IAASC,UAC1BoC,EAAI,uBAUCA,IAET,CAACnD,EAAME,EAAUC,IAGbmK,EAAcX,uBAClB,SAACY,GACC,OAAOC,IAAkBrK,GAAWqC,MAAQ+H,IAE9C,CAACpK,IAGGsK,EAAWzC,mBAAQ,WACvB,OAAKR,GAEHT,IAAY2D,IAAUC,QAElBxB,IAAiB3B,EAASA,EAAQ4B,QAAQwB,UAAUH,SACpDrD,EAAQyD,UAAYC,IAAUH,SAAW1K,IAAWa,IAASC,QAA7D,sBAGKoI,IAAiB3B,EAASA,EAAQ4B,QAAQwB,UAAUH,UAHzD,YAIKtB,IAAiB3B,EAASA,EAAQ4B,QAAQwB,UAAUH,WAEzDtB,IAAiB3B,EAASA,EAAQ4B,QAAQwB,UAAUH,UAGtCxG,KAAI,SAAC8G,GACvB,IAAMC,EAAWD,EAAQjB,WAAR,SACXmB,EAAQF,EAAQjB,WAAWpD,GAC3BwE,EAAMtH,OAAOC,OAAO,GAAIkH,GAE9B,OADAG,EAAIhF,GAAJ,UAAYY,EAAZ,YAAuBmE,GAAvB,OAA+BD,EAAW,IAAMA,EAAW,IACpDE,KAnBY,OAqBpB,CAAC1D,EAASV,EAASC,EAAS9G,EAAQmH,IAEjC+D,EAAgBxB,uBACpB,SAACyB,GACCA,EAAgB1K,OAAO,SAASY,MAAK,SAACI,GACpC,GAAIzB,IAAWa,IAAS+E,WAAY,CAAC,IAAD,EAO9B1C,EANE8H,EAAQvJ,EAAEoI,WAAWpD,GACrB0B,EAAYwB,IAAWqB,GACvBD,EAAWtJ,EAAEoI,WAAF,SAEXC,EAAY/J,EAAKoI,GACjBiD,EAAY,OAAGtB,QAAH,IAAGA,GAAH,UAAGA,EAAWuB,iBAAd,aAAG,EAAuBN,GAI5C,OAFc7H,EAAIwD,EAAdqE,EAAgCK,EACTtB,EADuB5J,GAGhDkC,YAAoBc,GAAKkF,GAAkB,MAA9B,KACb,UACAkD,YAAYP,GAAsBC,SAK1C,CAAChL,EAAQD,EAAMG,EAAWkI,IAGtBmD,EAAoBjL,iBAAO,MAqUjC,OAlUArB,qBAAU,WACIwB,YAAOJ,EAAOlB,SAEtB+B,KAAK,iBAAkB,QAAQsE,GAAG,SAAS,WAC7C+F,EAAkBpM,QAAU,KAC5B8H,EAAqB,CACnBkB,UAAWtB,EACX2E,aAAc,YAGjB,CAAC3E,EAASI,IAGbhI,qBAAU,WACR,GAAKsI,EAAL,CACA,IAAM/G,EAAMC,YAAOJ,EAAOlB,SACpBsM,EAAI1K,cAAaC,SAASC,KAI1BkK,EAAkB3K,EACrBC,OAAO,YACPU,UAAU,QACVpB,KAAKC,IAAWa,IAASC,QAAU0J,EAAW,IAAI,SAAC/I,GAAD,OAAOA,EAAEwE,MAC3DlG,KAAKyK,GAAU,SAAC/I,GAAD,OAAOA,EAAEwE,MACxBzE,MACC,SAAC2D,GAAD,OACEA,EACGV,OAAO,QACPvD,KAAK,IAAK8H,GACV9H,KAAK,QAAS,UACdA,KAAK,eAAgB,KACrBA,KAAK,iBAAkB,GACvBmB,MAAM,SAAU,WAChBmD,GAAG,cAAc,SAAC/D,GAGjBwF,EAAqB,CACnBkB,UAAWwB,IAAWC,IAAenI,EAAEoI,WAAWpD,KAClD+E,aAAc/J,EAAEoI,WAAF,cAGjB3I,KAAK,OAAQ,SAEbA,KAAK,SAAU,SACfW,MAAK,SAACsD,GACLA,EAAMV,OAAO,eAEnB,SAACiH,GAAD,OAAYA,KACZ,SAACC,GAAD,OACEA,EACG5K,WAAW0K,GACXvK,KAAK,SAAU,SACfA,KAAK,OAAQ,SAEbE,YAENF,KAAK,iBAAkB,OACvBsE,GAAG,cAAc,SAAC/D,GACb8J,EAAkBpM,UAAYsC,EAAG8J,EAAkBpM,QAAU,KAC5DoM,EAAkBpM,QAAUsC,KAElC+D,GAAG,SAAS,SAAC/D,GAAO,IAAD,EAClBmK,IAAMC,kBACN,IAAM1D,EAAYwB,IAAWC,IAAenI,EAAEoI,WAAWpD,MAEvD8E,EAAkBpM,SAClBgI,EAAQyD,UAAYC,IAAUiB,QAC9B,UAAC/L,EAAKoI,UAAN,aAAC,EAAiBkD,aAIpB7K,EAAIU,KAAK,iBAAkB,QAC3BV,EAAIC,OAAO,YAAYU,UAAU,QAAQD,KAAK,iBAAkB,YAMjEW,MAAK,SAACkK,GACL,OAAOA,EACJhL,WAAW0K,GACXvK,KAAK,OAAQuI,GAEbvI,KAAK,SAAUmJ,EAAY2B,KAAK,EAAM,QAG7CC,OAAOC,qBAAoB,WACzBhB,EAAcC,SAEf,CACDnL,EACAD,EACAyK,EACAf,EACAlC,EACAF,EACAF,EAAQyD,QACR5B,EACAkC,EACAjE,EACAoD,IAKFpL,qBAAU,WACR,GAAKuL,EAAL,CAEA,IAAMhK,EAAMC,YAAOJ,EAAOlB,SACpBsM,EAAI1K,cAAaC,SAASC,KAE5BkL,EAAc,GAEdnM,IAAWa,IAASC,UACtBqL,EAAc3B,EACXxG,KAAI,SAAC8G,GACJ,IAAM3C,EAAYwB,IAAWC,IAAekB,EAAQjB,WAAWpD,KAEzDqD,EAAY/J,EAAKoI,GAEvB,GAAIrB,IAAY2D,IAAUC,QACxBI,EAAQsB,MAAQ1F,EAAkBoD,EAAW5J,QACxC,GAAI4G,IAAY2D,IAAU4B,UAAW,CAE1C,IAAMjB,EAAetB,EAGnBgB,EAAQsB,MAAQ1F,EAAkB0E,EAAclL,GAQpD,OAAO4K,KAERwB,MAAK,SAACC,EAAUC,GAAX,OAAwBA,EAASJ,MAAQI,EAASJ,UAK5D5L,EACGC,OAAO,YACPU,UAAU,UACVpB,KAAKoM,GAAa,SAACrB,GAAD,OAAaA,EAAQ7E,MACvCzE,MACC,SAAC2D,GAAD,OACEA,EACGV,OAAO,UACPvD,KACC,aACA,SAAC4J,GAAD,0BAA0B9B,EAAKyD,SAAS3B,GAAxC,QAED5J,KAAK,eAAgB,KACrBmB,MAAM,SAAU,WAChBnB,KAAK,iBAAkB,UAC5B,SAACwK,GAAD,OAAYA,KACZ,SAACC,GAAD,OAAUA,EAAK9J,MAAK,SAAC8J,GAAD,OAAUA,EAAK5K,WAAW0K,GAAGvK,KAAK,IAAK,GAAGE,eAE/DoE,GAAG,cAAc,SAACsF,GAEjB7D,EAAqB,CACnBkB,UAAWwB,IAAWC,IAAekB,EAAQjB,WAAWpD,KACxD+E,aACE1E,IAAY2D,IAAUC,QAClB,KACAI,EAAQjB,WAAR,cAITrE,GAAG,cAAc,SAACsF,GACbS,EAAkBpM,UAAY2L,EAChCS,EAAkBpM,QAAU,KACzBoM,EAAkBpM,QAAU2L,KAElCtF,GAAG,SAAS,SAACsF,GACZc,IAAMC,mBACFN,EAAkBpM,UAAWgI,EAAQyD,QAAYC,IAAUiB,UAQhE/K,WAAW0K,GACXvK,KAAK,OAAQqJ,IAAkBrK,GAAWqC,MAAQ,MAClDrB,KAAK,SAAUqJ,IAAkBrK,GAAWqC,MAAQ,MACpDrB,KAAK,KAAK,SAAC4J,GAGV,OAAO7K,EAAS6K,EAAQsB,aAE3B,CACDjF,EAAQyD,QACR5K,EACA8G,EACA/G,EACAyK,EACAnD,EACApH,EACA+I,EACA/B,EACA/G,IAIFjB,qBAAU,WACR,GAAKsI,EAAL,CACA,IAAM/G,EAAMC,YAAOJ,EAAOlB,SACpBsM,EAAI1K,cAAaC,SAASC,KAE5ByL,EAAa,GACbC,EAAgB,GAEhBxF,EAAQyD,UAAYC,IAAUH,WAChCgC,EAAa,CAACxD,IAAc3B,EAASA,EAAQ4B,QAAQwB,YAC1C,GAAG1E,GAAd,UAAsBY,EAAtB,aAIAM,EAAQyD,UAAYC,IAAUiB,OAC7BhF,IAAY2D,IAAU4B,WAAarM,IAAWa,IAAS+E,eAGxD+G,EAAgB,CAACzD,IAAc3B,EAASA,EAAQ4B,QAAQwB,YAC1C,GAAG1E,GAAjB,UAAyBY,EAAzB,eAGFrG,EACGC,OAAO,kBACPS,KAAK,OAAQ,QACbA,KAAK,eAAgB,KACrBC,UAAU,QACVpB,KAAK2M,GAAY,SAACjL,GAAD,OAAOA,EAAEwE,MAC1BzE,MACC,SAAC2D,GAAD,OAAWA,EAAMV,OAAO,QAAQvD,KAAK,IAAK8H,GAAM9H,KAAK,SAAU,YAC/D,SAACwK,GAAD,OAAYA,KACZ,SAACC,GAAD,OAAUA,EAAK5K,WAAW0K,GAAGvK,KAAK,SAAU,SAASE,YAEtDL,WAAW0K,GACXvK,KAAK,SAAUmJ,EAAY2B,KAAK,EAAM,OAEzCxL,EACGC,OAAO,qBACPS,KAAK,OAAQ,QACbA,KAAK,eAAgB,KACrBC,UAAU,QACVpB,KAAK4M,GAAe,SAAClL,GAAD,OAAOA,EAAEwE,MAC7BzE,MACC,SAAC2D,GAAD,OACEA,EACGV,OAAO,QACPvD,KAAK,IAAK8H,GACV9H,KAAK,IAAK8H,GACV9H,KAAK,SAAU,YACpB,SAACwK,GAAD,OAAYA,KACZ,SAACC,GAAD,OAAUA,EAAK5K,WAAW0K,GAAGvK,KAAK,SAAU,SAASE,YAEtDL,WAAW0K,GACXvK,KAAK,SAAUmJ,EAAY2B,KAAK,EAAM,UACxC,CACDzE,EACAJ,EACAN,EACA7G,EACA8G,EACA5G,EACA8I,EACAqB,IAIFpL,qBAAU,WACR,IAAMkJ,EAAYpB,EAAkBoB,UAC9ByE,EAAYC,IAAW1E,GAGvB3H,EAAMC,YAAOJ,EAAOlB,SAEtBa,IAAWa,IAASC,QACtBN,EACGC,OAAO,YACPU,UAAU,UACVD,KAAK,gBAAgB,SAACO,GAQrB,OANEmL,IAAchD,IAAenI,EAAEoI,WAAWpD,IAMvB,EAAI,OAG7BjG,EACGC,OAAO,YACPU,UAAU,QACV2L,MAAK,SAAUrL,GACd,IAAMsL,EACJH,IAAchD,IAAenI,EAAEoI,WAAWpD,IAKxCsG,GAAaC,KAAKC,WAAWC,YAAYF,MAC7CvM,YAAOuM,MAAM9L,KAAK,iBAAkB6L,EAAc,EAAI,QAG3D,CACDxF,EACAxH,EACA8G,EACAC,EACA9G,EACA+G,EAAkBoB,UAClBpB,EAAkByE,aAClBtL,IAIA,kBAAC,IAAMiN,SAAP,KACE,yBAAKpH,UAAU,cACb,yBACEE,GAAG,QACHmH,QAAO,cAviBQ,IAuiBR,YAviBa,KAwiBpBlH,oBAAoB,gBACpBrH,IAAKwB,GAEL,uBAAG0F,UAAU,YACb,uBAAGA,UAAU,kBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,aAEdoB,EAAQyD,UAAYC,IAAUiB,SAC3BpF,EAAiB,UACjB3G,EAAK8G,UADY,iBACjB,EAAewE,iBADE,aACjB,EAA2BgC,KAC3BnN,IAEA,yBAAK6F,UAAWuH,IAAW,aAAD,aAAqBpN,OASpDD,GAAY,kBAAC,EAAc,CAACF,OAAMC,SAAQC,WAAUC,cAErD,yBAAKmC,MAAO,CAAC8D,SAAU,WAAYvF,OAAQ,IACzC,8BACE,4BAAQqF,GAAG,gBAAgBsH,0BAA0B,QACnD,mCACEC,KAAK,SACLC,OAAO","file":"static/js/25.5f90be76.chunk.js","sourcesContent":["import {ResizeObserver} from '@juggle/resize-observer';\nimport {useState, useEffect} from 'react';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;\n","import {\n  D3_TRANSITION_DURATION,\n  MAP_LEGEND_HEIGHT,\n  MAP_VIZS,\n} from '../constants';\nimport {useResizeObserver} from '../hooks/useResizeObserver';\nimport {capitalize, formatNumber} from '../utils/commonFunctions';\n\nimport {range, quantile} from 'd3-array';\nimport {axisRight, axisBottom} from 'd3-axis';\nimport {format} from 'd3-format';\nimport {interpolate, interpolateRound, quantize} from 'd3-interpolate';\nimport {scaleLinear, scaleOrdinal, scaleBand} from 'd3-scale';\nimport {select} from 'd3-selection';\nimport React, {useEffect, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nfunction MapLegend({data, mapViz, mapScale, statistic}) {\n  const {t} = useTranslation();\n\n  const svgRef = useRef(null);\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    let {width, height} =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    if (!width || !height)\n      ({width, height} = wrapperRef.current.getBoundingClientRect());\n\n    if (!width || !height) return;\n    // console.log(width, height, mapViz === MAP_VIZS.BUBBLES);\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n      svg\n        .select('.ramp')\n        .transition(t)\n        .attr('opacity', 0)\n        .attr('xlink:href', null);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .transition(t)\n        .attr('opacity', 0)\n        .remove();\n      svg.selectAll('.axis > *:not(.axistext)').remove();\n      svg.select('.axistext').text('');\n\n      const domainMax = mapScale.domain()[1];\n\n      const legend = svg\n        .select('.circles')\n        .attr('transform', `translate(48,40)`)\n        .attr('text-anchor', 'middle');\n\n      legend\n        .selectAll('circle')\n        .data([domainMax / 10, (domainMax * 2) / 5, domainMax])\n        .join('circle')\n        .attr('fill', 'none')\n        .attr('stroke', '#ccc')\n        .transition(t)\n        .attr('cy', (d) => -mapScale(d))\n        .attr('r', mapScale);\n\n      const yScale = mapScale.copy().range([0, -2 * mapScale(domainMax)]);\n\n      svg\n        .select('.circleAxis')\n        .attr('transform', `translate(48,50)`)\n        .transition(t)\n        .call(\n          axisRight(yScale)\n            .tickSize(0)\n            .tickPadding(0)\n            .tickValues([domainMax / 10, (domainMax * 2) / 5, domainMax])\n            .tickFormat((num) => formatNumber(num, 'short'))\n        )\n        .selectAll('.tick text')\n        .style('text-anchor', 'middle');\n\n      svg.select('.circleAxis').call((g) => g.select('.domain').remove());\n    } else {\n      svg.call(() =>\n        legend({\n          svg: svg,\n          color: mapScale,\n          title: `${t(capitalize(statistic))} ${t('cases')}`,\n          width: width,\n          height: height,\n          ticks: 5,\n          tickFormat: function (d, i, n) {\n            if (mapViz === MAP_VIZS.CHOROPLETH && !Number.isInteger(d)) return;\n            if (i === n.length - 1) return formatNumber(d) + '+';\n            return formatNumber(d);\n          },\n          marginLeft: 2,\n          marginRight: 0,\n        })\n      );\n    }\n  }, [t, dimensions, mapScale, mapViz, statistic]);\n\n  return (\n    <div\n      className=\"svg-parent maplegend\"\n      style={{\n        height: MAP_LEGEND_HEIGHT, \n        // position: \"absolute\", \n        //width: \"50px\", \n        // right: \"64px\", \n        // bottom: \"0px\"\n        marginTop: \"48px\",\n      }}\n      ref={wrapperRef}\n    >\n      <svg id=\"legend\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\n        <image className=\"ramp\" />\n        <g className=\"bars\"></g>\n        <g className=\"circles\"></g>\n        <g className=\"circleAxis\"></g>\n        <g className=\"axis\">\n          <text className=\"axistext\" />\n        </g>\n      </svg>\n      <canvas\n        className=\"color-scale\"\n        style={{position: 'absolute', height: 0}}\n      />\n    </div>\n  );\n}\n\nexport default MapLegend;\n\nfunction legend({\n  svg,\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights,\n} = {}) {\n  svg.selectAll('.circles > *').remove();\n  svg.selectAll('.circleAxis > *').remove();\n  const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(quantize(interpolate(marginLeft, width - marginRight), n));\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(color.copy().domain(quantize(interpolate(0, 1), n))).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    svg\n      .select('.bars')\n      .selectAll('rect')\n      .transition(t)\n      .attr('opacity', 0)\n      .remove();\n\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\n      .transition(t)\n      .attr('opacity', 1);\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = range(n).map((i) => quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? format(tickFormat)\n        : tickFormat;\n\n    x = scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    svg\n      .select('.ramp')\n      .transition(t)\n      .attr('opacity', 0)\n      .attr('xlink:href', null);\n    if (!ordinalWeights) {\n      x = scaleBand()\n        .domain(color.domain())\n        .rangeRound([marginLeft, width - marginRight]);\n      svg\n        .selectAll('rect')\n        .data(color.domain())\n        .join('rect')\n        .attr('x', x)\n        .attr('y', marginTop)\n        .attr('width', Math.max(0, x.bandwidth() - 1))\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color);\n    } else {\n      const widthScale = scaleLinear()\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\n        .rangeRound([0, width - marginLeft - marginRight]);\n\n      const xPos = ordinalWeights.map((w, i) =>\n        ordinalWeights\n          .slice(0, i)\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\n      );\n\n      x = scaleOrdinal().domain(color.domain()).range(xPos);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .data(color.domain())\n        .join((enter) =>\n          enter\n            .append('rect')\n            .attr('x', x)\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        )\n        .attr('y', marginTop)\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color)\n        .transition(t)\n        .attr('x', x)\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        .attr('opacity', 1);\n    }\n\n    tickAdjust = () => {};\n  }\n  // console.log(height, marginBottom)\n  svg\n    .select('.axis')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .transition(t)\n    .attr('class', 'axis')\n    .call(\n      axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .on('start', () => {\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\n    })\n    .call((g) =>\n      g\n        .select('.axistext')\n        .attr('class', 'axistext')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  // const canvas = document.createElement('canvas');\n  const canvas = select('.color-scale').node();\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n","import MapLegend from './MapLegend';\n\nimport {\n  D3_TRANSITION_DURATION,\n  MAP_META,\n  MAP_TYPES,\n  MAP_VIEWS,\n  MAP_VIZS,\n  CITY_CODES,\n  CITY_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n  TOPO2CITY_NAME,\n  // TOPO2CITY_NAME,\n} from '../constants';\nimport {\n  formatNumber,\n  getStatistic,\n  toTitleCase,\n} from '../utils/commonFunctions';\n\nimport {AlertIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport {max} from 'd3-array';\nimport {json} from 'd3-fetch';\nimport {geoMercator, geoTransverseMercator, geoIdentity, geoPath} from 'd3-geo';\nimport {scaleSqrt, scaleSequential} from 'd3-scale';\n// eslint-disable-next-line\n// import worker from 'workerize-loader!../workers/mapVisualizer';\nimport {\n  interpolateReds,\n  interpolateBlues,\n  interpolateGreens,\n  interpolateGreys,\n  interpolatePurples,\n  interpolateOranges,\n} from 'd3-scale-chromatic';\nimport {select, event} from 'd3-selection';\nimport {transition} from 'd3-transition';\nimport React, {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport useSWR from 'swr';\nimport * as topojson from 'topojson';\n\nconst [width, height] = [432, 488];\n\nconst CODE_1 = \"DHB_code\"; //ID_1;\nconst CODE_2 = \"MoH_Char_C\"; //ID_2; \nconst NAME_1 = \"DHB_name\"; // NAME_1\nconst NAME_2 = \"\";\n\nconst colorInterpolator = (statistic) => {\n  switch (statistic) {\n    case 'confirmed':\n      return (t) => interpolateReds(t * 0.85);\n    case 'active':\n      return (t) => interpolateBlues(t * 0.85);\n    case 'recovered':\n      return (t) => interpolateGreens(t * 0.85);\n    case 'deceased':\n      return (t) => interpolateGreys(t * 0.85);\n    case 'tested':\n      return (t) => interpolatePurples(t * 0.85);\n    default:\n      return (t) => interpolateOranges(t * 0.85);\n  }\n};\n\nconst getTotalStatistic = (data, statistic) => {\n  return getStatistic(data, 'total', statistic);\n};\n\nfunction MapVisualizer({\n  mapCode,\n  mapView,\n  mapViz,\n  data,\n  changeMap,\n  regionHighlighted,\n  setRegionHighlighted,\n  statistic,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const svgRef = useRef(null);\n\n  const mapMeta = MAP_META[mapCode];\n  const history = useHistory();\n\n  const {data: geoData} = useSWR(\n    mapMeta.geoDataFile,\n    async (file) => {\n      return await json(file);\n    },\n    {suspense: false, revalidateOnFocus: false}\n  );\n\n  const statisticMax = useMemo(() => {\n    const stateCodes = Object.keys(data).filter(\n      (stateCode) =>\n        stateCode !== 'TT' //&& Object.keys(MAP_META).includes(stateCode)\n    );\n    return max(stateCodes, (stateCode) => getTotalStatistic(data[stateCode], statistic))\n    // mapView === MAP_VIEWS.STATES || mapView === MAP_VIEWS.COUNTRY\n      // ?\n       max(stateCodes, (stateCode) =>\n          getTotalStatistic(data[stateCode], statistic)\n        )\n      // : max(stateCodes, (stateCode) =>\n      //     data[stateCode]?.districts\n      //       ? max(Object.values(data[stateCode].districts), (districtData) =>\n      //           getTotalStatistic(districtData, statistic)\n      //         )\n      //       : 0\n      //   );\n  }, [data, mapView, statistic]);\n\n  const statisticTotal = useMemo(() => {\n    return getTotalStatistic(data[mapCode], statistic);\n  }, [data, mapCode, statistic]);\n\n  const mapScale = useMemo(() => {\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      return scaleSqrt([0, Math.max(statisticMax, 1)], [0, 40])\n        .clamp(true)\n        .nice(3);\n    } else {\n      return scaleSequential(\n        [0, Math.max(1, statisticMax)],\n        colorInterpolator(statistic)\n      ).clamp(true);\n    }\n  }, [mapViz, statistic, statisticMax]);\n  // console.log(\"mapViz === MAP_VIZS.BUBBLES: \", mapViz === MAP_VIZS.BUBBLES)\n\n  const path = useMemo(() => {\n    if (!geoData) return null;\n    \n    // console.log(mapMeta);\n    const topology = topojson.feature(\n      geoData,\n      // geoData.objects[mapMeta.graphObjectStates || mapMeta.graphObjectDistricts]\n      geoData.objects[\"NZL_adm2\"]\n    );\n    // return geoPath(geoMercator().fitSize([width, height], topology));\n    // return geoIdentity()\n      // .reflectY(true)\n      // .fitSize([width, height], topology)\n\n    // Have to change from original, which was geoIdentity, to using projection\n    // const projection = geoMercator()\n      // .fitSize([width, height], topology)\n      // .translate([width / 2, height / 2])\n      // .precision(0.5);\n    // console.log(projection)\n    // return geoPath(null)\n    return geoPath(\n      geoTransverseMercator()\n      .reflectY(true)\n      .reflectX(true)\n      .fitSize([width, height], topology)\n    )\n    // return geoPath(geoIdentity().fitSize([width, height], topology))\n    // return geoPath(projection);\n    // return geoPath(geoIdentity());\n  }, [geoData]);\n\n  // const fillOpacity = useCallback(\n  //   (alpha) => {\n  //     // console.log(alpha, STATISTIC_CONFIGS[statistic].color);\n  //     return mapViz === MAP_VIZS.CHOROPLETH ? '1' : '0'\n  //   },\n  //   [data, mapScale, statistic, mapViz]\n  // )\n  \n  // https://css-tricks.com/8-digit-hex-codes/\n  const fillColor = useCallback(\n    // 'rgba(255,255,255,0)'\n    (d) => {\n      // console.log(d)\n      if(!d) return 'rgba(255,255,255,0)';\n      const stateCode = CITY_CODES[TOPO2CITY_NAME[d.properties[CODE_2]]];\n      const stateData = data[stateCode];\n      let n;\n      if (mapViz === MAP_VIZS.CHOROPLETH) {\n        // return 'rgba(255,255,255,1)'\n        \n        n = getTotalStatistic(stateData, statistic);\n        n = mapScale(n);\n        // n = \"rgba(255,0,0,1)\";\n        Array.from(document.getElementsByClassName('region')).forEach(\n          el => el.style.opacity = 1\n        );\n      }\n      else if(mapViz === MAP_VIZS.BUBBLES){\n        n = \"rgba(255,255,255,0)\";\n        \n      }\n      // console.log(\"new color: \", n)\n      // else \n      //   n = \"#ffffff00\";\n        // n = 'rgba(255,255,255,1)'\n      // const color = n === 0 ? '#ffffff00' : \n      // const color = n === 0 ? 'rgba(255,255,255,1)' : mapScale(n);\n      // const color = n === 0 ? 'rgb(255,255,255)' : 'rgb(255,0,0)';\n      return n;\n    },\n    [data, mapScale, statistic]\n  );\n\n  const strokeColor = useCallback(\n    (alpha) => {\n      return STATISTIC_CONFIGS[statistic].color + alpha;\n    },\n    [statistic]\n  );\n\n  const features = useMemo(() => {\n    if (!geoData) return null;\n    const featuresWrap =\n      mapView === MAP_VIEWS.COUNTRY\n        // ? topojson.feature(geoData, geoData.objects.states).features\n        ? topojson.feature(geoData, geoData.objects.NZL_adm2).features\n        : mapMeta.mapType === MAP_TYPES.COUNTRY && mapViz === MAP_VIZS.BUBBLES\n        ? [\n            // ...topojson.feature(geoData, geoData.objects.states).features,\n            ...topojson.feature(geoData, geoData.objects.NZL_adm2).features,\n            ...topojson.feature(geoData, geoData.objects.NZL_adm2).features,\n          ]\n        : topojson.feature(geoData, geoData.objects.NZL_adm2).features;\n\n    // Add id to each feature\n    return featuresWrap.map((feature) => {\n      const district = feature.properties[CODE_1];\n      const state = feature.properties[CODE_2];\n      const obj = Object.assign({}, feature);\n      obj.id = `${mapCode}-${state}${district ? '-' + district : ''}`;\n      return obj;\n    });\n  }, [geoData, mapCode, mapView, mapViz, mapMeta]);\n\n  const populateTexts = useCallback(\n    (regionSelection) => {\n      regionSelection.select('title').text((d) => {\n        if (mapViz === MAP_VIZS.CHOROPLETH) {\n          const state = d.properties[CODE_2];\n          const stateCode = CITY_CODES[state];\n          const district = d.properties[CODE_1];\n\n          const stateData = data[stateCode];\n          const districtData = stateData?.districts?.[district];\n          let n;\n          if (district) n = getTotalStatistic(districtData, statistic);\n          else n = getTotalStatistic(stateData, statistic);\n          return (\n            formatNumber(100 * (n / (statisticTotal || 0.001))) +\n            '% from ' +\n            toTitleCase(district ? district : state)\n          );\n        }\n      });\n    },\n    [mapViz, data, statistic, statisticTotal]\n  );\n\n  const onceTouchedRegion = useRef(null);\n\n  // Reset on tapping outside map\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    svg.attr('pointer-events', 'auto').on('click', () => {\n      onceTouchedRegion.current = null;\n      setRegionHighlighted({\n        stateCode: mapCode,\n        districtName: null,\n      });\n    });\n  }, [mapCode, setRegionHighlighted]);\n\n  // Choropleth\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    // console.log(\"mapViz === MAP_VIZS.BUBBLES: \", mapViz === MAP_VIZS.BUBBLES);\n    // console.log(\"features: \", features);\n    const regionSelection = svg\n      .select('.regions')\n      .selectAll('path')\n      .data(mapViz !== MAP_VIZS.BUBBLES ? features : [], (d) => d.id)\n      .data(features, (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr(\"class\", \"region\")\n            .attr('stroke-width', 1.8)\n            .attr('stroke-opacity', 0)\n            .style('cursor', 'pointer')\n            .on('mouseenter', (d) => {\n              // console.log('mouse entered region: ', d.properties);\n              // console.log('CITY_CODES[d.properties[CODE_2]]: ', d.properties[CODE_2])\n              setRegionHighlighted({\n                stateCode: CITY_CODES[TOPO2CITY_NAME[d.properties[CODE_2]]],\n                districtName: d.properties[NAME_1]// + (d.properties[NAME_2] !== d.properties[NAME_1] && d.properties[NAME_1] ? \", \" + d.properties[NAME_2] : \"\"),\n              });\n            })\n            .attr('fill', '#fff0')\n            // .attr('fill', fillColor)\n            .attr('stroke', '#fff0')\n            .call((enter) => {\n              enter.append('title');\n            }),\n        (update) => update,\n        (exit) =>\n          exit\n            .transition(T)\n            .attr('stroke', '#fff0')\n            .attr('fill', '#fff0')\n            // .attr('fill', fillColor)\n            .remove()\n      )\n      .attr('pointer-events', 'all')\n      .on('touchstart', (d) => {\n        if (onceTouchedRegion.current === d) onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = d;\n      })\n      .on('click', (d) => {\n        event.stopPropagation();\n        const stateCode = CITY_CODES[TOPO2CITY_NAME[d.properties[CODE_2]]];\n        if (\n          onceTouchedRegion.current ||\n          mapMeta.mapType === MAP_TYPES.STATE ||\n          !data[stateCode]?.districts\n        )\n          return;\n        // Disable pointer events till the new map is rendered\n        svg.attr('pointer-events', 'none');\n        svg.select('.regions').selectAll('path').attr('pointer-events', 'none');\n        // Switch map\n        // history.push(\n        //   `/state/${stateCode}${window.innerWidth < 769 ? '#MapExplorer' : ''}`\n        // );\n      })\n      .call((sel) => {\n        return sel\n          .transition(T)\n          .attr('fill', fillColor)\n          // .attr('fill', '#fff0')\n          .attr('stroke', strokeColor.bind(this, ''));\n      });\n\n    window.requestIdleCallback(() => {\n      populateTexts(regionSelection);\n    });\n  }, [\n    mapViz,\n    data,\n    features,\n    fillColor,\n    geoData,\n    history,\n    mapMeta.mapType,\n    path,\n    populateTexts,\n    setRegionHighlighted,\n    strokeColor,\n    // fillOpacity,\n  ]);\n\n  // Bubble\n  useEffect(() => {\n    if (!features) return;\n\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let circlesData = [];\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      circlesData = features\n        .map((feature) => {\n          const stateCode = CITY_CODES[TOPO2CITY_NAME[feature.properties[CODE_2]]];\n          // const districtName = feature.properties[CODE_1];\n          const stateData = data[stateCode];\n          // console.log(stateData, mapView === MAP_VIEWS.COUNTRY)\n          if (mapView === MAP_VIEWS.COUNTRY) {\n            feature.value = getTotalStatistic(stateData, statistic);\n          } else if (mapView === MAP_VIEWS.DISTRICTS) {\n            // const districtData = stateData?.districts?.[districtName];\n            const districtData = stateData;\n            // console.log(districtData, statistic)\n            // if (districtName)\n              feature.value = getTotalStatistic(districtData, statistic);\n            // else\n            //   feature.value = getTotalStatistic(\n            //     stateData?.districts?.[UNKNOWN_DISTRICT_KEY],\n            //     statistic\n            //   );\n          }\n\n          return feature;\n        })\n        .sort((featureA, featureB) => featureB.value - featureB.value);\n\n        // console.log(circlesData)\n    }\n\n    svg\n      .select('.circles')\n      .selectAll('circle')\n      .data(circlesData, (feature) => feature.id)\n      .join(\n        (enter) =>\n          enter\n            .append('circle')\n            .attr(\n              'transform',\n              (feature) => `translate(${path.centroid(feature)})`\n            )\n            .attr('fill-opacity', 0.25)\n            .style('cursor', 'pointer')\n            .attr('pointer-events', 'all'),\n        (update) => update,\n        (exit) => exit.call((exit) => exit.transition(T).attr('r', 0).remove())\n      )\n      .on('mouseenter', (feature) => {\n        \n        setRegionHighlighted({\n          stateCode: CITY_CODES[TOPO2CITY_NAME[feature.properties[CODE_2]]],\n          districtName:\n            mapView === MAP_VIEWS.COUNTRY\n              ? null\n              : feature.properties[NAME_1]// + (feature.properties[NAME_2] !== feature.properties[NAME_1] && feature.properties[NAME_1] ? \", \" + feature.properties[NAME_2] : \"\"),\n              //: feature.properties.CODE_1 || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('touchstart', (feature) => {\n        if (onceTouchedRegion.current === feature)\n          onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = feature;\n      })\n      .on('click', (feature) => {\n        event.stopPropagation();\n        if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE)\n          return;\n        // history.push(\n        //   `/state/${CITY_CODES[feature.properties[CODE_2]]}${\n        //     window.innerWidth < 769 ? '#MapExplorer' : ''\n        //   }`\n        // );\n      })\n      .transition(T)\n      .attr('fill', STATISTIC_CONFIGS[statistic].color + '70')\n      .attr('stroke', STATISTIC_CONFIGS[statistic].color + '70')\n      .attr('r', (feature) => {\n        // console.log(feature.value);\n        // console.log(mapScale(feature.value))\n        return mapScale(feature.value);\n      });\n  }, [\n    mapMeta.mapType,\n    mapViz,\n    mapView,\n    data,\n    features,\n    history,\n    mapScale,\n    path,\n    setRegionHighlighted,\n    statistic,\n  ]);\n\n  // Boundaries\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let meshStates = [];\n    let meshDistricts = [];\n\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n      meshStates = [topojson.mesh(geoData, geoData.objects.NZL_adm2)];\n      meshStates[0].id = `${mapCode}-states`;\n    }\n\n    if (\n      mapMeta.mapType === MAP_TYPES.STATE ||\n      (mapView === MAP_VIEWS.DISTRICTS && mapViz === MAP_VIZS.CHOROPLETH)\n    ) {\n      // Add id to mesh\n      meshDistricts = [topojson.mesh(geoData, geoData.objects.NZL_adm2)];\n      meshDistricts[0].id = `${mapCode}-districts`;\n    }\n\n    svg\n      .select('.state-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshStates, (d) => d.id)\n      .join(\n        (enter) => enter.append('path').attr('d', path).attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n\n    svg\n      .select('.district-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshDistricts, (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('d', path)\n            .attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n  }, [\n    geoData,\n    mapMeta,\n    mapCode,\n    mapViz,\n    mapView,\n    statistic,\n    path,\n    strokeColor,\n  ]);\n\n  // Highlight\n  useEffect(() => {\n    const stateCode = regionHighlighted.stateCode;\n    const stateName = CITY_NAMES[stateCode];\n    // const district = regionHighlighted.districtName;\n    // console.log(stateCode, stateName, district)\n    const svg = select(svgRef.current);\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      svg\n        .select('.circles')\n        .selectAll('circle')\n        .attr('fill-opacity', (d) => {\n          const highlighted =\n            stateName === TOPO2CITY_NAME[d.properties[CODE_2]]\n            // ((!district && stateCode !== mapCode) ||\n            //   district === d.properties[CODE_1] ||\n            //   mapView === MAP_VIEWS.COUNTRY ||\n            //   (district === UNKNOWN_DISTRICT_KEY && !d.properties[CODE_1]));\n          // console.log(\"highlighted: \", stateName, TOPO2CITY_NAME[d.properties[CODE_2]]  );\n          return highlighted ? 1 : 0.25;\n        });\n    } else {\n      svg\n        .select('.regions')\n        .selectAll('path')\n        .each(function (d) {\n          const highlighted =\n            stateName === TOPO2CITY_NAME[d.properties[CODE_2]]\n            // stateName === d.properties[CODE_2] &&\n            // ((!district && stateCode !== mapCode) ||\n            //   district === d.properties[CODE_1] ||\n            //   mapView === MAP_VIEWS.COUNTRY);\n          if (highlighted) this.parentNode.appendChild(this);\n          select(this).attr('stroke-opacity', highlighted ? 1 : 0);\n        });\n    }\n  }, [\n    geoData,\n    data,\n    mapCode,\n    mapView,\n    mapViz,\n    regionHighlighted.stateCode,\n    regionHighlighted.districtName,\n    statistic,\n  ]);\n\n  return (\n    <React.Fragment>\n      <div className=\"svg-parent\">\n        <svg\n          id=\"chart\"\n          viewBox={`0 0 ${width} ${height}`}\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={svgRef}\n        >\n          <g className=\"regions\" />\n          <g className=\"state-borders\" />\n          <g className=\"district-borders\" />\n          <g className=\"circles\" />\n        </svg>\n        {mapMeta.mapType === MAP_TYPES.STATE &&\n          !!getTotalStatistic(\n            data[mapCode]?.districts?.[UNKNOWN_DISTRICT_KEY],\n            statistic\n          ) && (\n            <div className={classnames('disclaimer', `is-${statistic}`)}>\n              {/* <AlertIcon />\n              <span>\n                {t('District-wise data not available in state bulletin')}\n              </span> */}\n            </div>\n          )}\n      </div>\n\n      {mapScale && <MapLegend {...{data, mapViz, mapScale, statistic}} />}\n\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549  0           0            0  0.08627451\n                      0           0.91372549  0            0  0.08627451\n                      0           0           0.854901961  0  0.145098039\n                      0           0           0            1  0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </React.Fragment>\n  );\n}\n\nexport default MapVisualizer;\n"],"sourceRoot":""}